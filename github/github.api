#!/bin/bash

usage() {
  echo "please define github_token and github_dir before running"
  exit 1
}

if [[ -f $HOME/.${GITHUB_ORG}.${GITHUB_PROJECT}.github.api ]] ; then
  . $HOME/.${GITHUB_ORG}.${GITHUB_PROJECT}.github.api
fi

[[ -z $github_token ]] && usage
[[ -z $github_dir ]] && usage

## Helpers

github_post() {
  declare json_file=$1; shift
  declare url=$1; shift

  curl -v \
    -H "Accept: application/vnd.github+json" \
    -H "Authorization: Bearer ${github_token}" \
    -H "X-GitHub-Api-Version: 2022-11-28" \
    -X POST \
    -d @${json_file} \
    -o ${github_dir}/post-out.json \
    "https://api.github.com${url}"

  return 0
}

github_get() {
  declare url=$1; shift

  curl -L \
    -H "Accept: application/vnd.github+json" \
    -H "Authorization: Bearer ${github_token}" \
    -H "X-GitHub-Api-Version: 2022-11-28" \
    -o ${github_dir}/get-out.json \
    "https://api.github.com${url}"
}

github_upload() {
  declare data_file=$1; shift

  declare mime=`file --brief --mime-type $data_file`
  declare filename=`basename $data_file`

  declare asset_path=`grep upload_url ${github_dir}/post-out.json | grep -o "/repos/.*/assets"`

  if [[ ! -f $data_file ]] ; then
    echo "The file $data_file does not exist."
    return 1
  fi

  if [[ -z $asset_path ]]; then
    echo "Cannot find asset path in post-out.json to upload to.  Did you release first?"
    return 1
  fi

  curl -v \
    -H "Accept: application/vnd.github+json" \
    -H "Authorization: Bearer ${github_token}" \
    -H "X-GitHub-Api-Version: 2022-11-28" \
    -H "Content-Type: $mime" \
    -X POST \
    --data-binary @${data_file} \
    -o ${github_dir}/upload-out.json \
    "https://uploads.github.com${asset_path}?name=${filename}"

  return 0
}

github_release() {
  declare project=$1; shift
  declare name=$1; shift
  declare body=$1; shift

  cat >${github_dir}/release.json <<EOF
{
  "tag_name": "${name}",
  "name": "${name}",
  "body": "${body}",
  "draft": true,
  "prerelease": false
}
EOF

  github_post "${github_dir}/release.json" "/repos/${project}/releases"

}

